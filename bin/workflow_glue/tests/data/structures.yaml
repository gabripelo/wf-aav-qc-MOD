# This file provides minimal examples of the two  AAV structure categories.
# 1. The aln_types that are initially assigned to each alignment  (aln_types)
# 2. The read assignments (assigned_genome_subtypes) that are defined by the consistent aln_types of the reads


itr1_start: 11
itr1_end: 156
itr2_start: 2324
itr2_end: 2454
itr_fl_threshold: 100

# aln_types (this set of test data tests all the AlnTypes that can be expected)
# aln_type: the name of the alignment type
# Examples: one of more alignment info entries that should map to the given AlnType
#  The components of the examples are:
#   - reference (this has no bearing on the results)
#   - start (reference start location)
#   - end (reference end location)
#   - strand
#   - IsSec (not needed , always 0 here)

aln_types:
  - aln_type: "Almost complete"
    examples:
      - "flip_flop 15 2449 1 0"
      - "flip_flop 14 2448 -1 0"
  - aln_type: "Partial 5` ITR and full 3` ITR"
    examples:
      - "flip_flop 112 2454 1 0"
      - "flip_flop 120 2446 -1 0"

  - aln_type: "Partial 5` ITR and partial 3` ITR"
    examples:
      - "flip_flop 112 2325 1 0"
      - "flip_flop 122 2354 -1 0"

  - aln_type: "Full 5` ITR and partial 3` ITR"
    examples:
      - "flip_flop 11 2324 1 0"
      - "flip_flop 20 2354 -1 0"

  - aln_type: "Partial - no ITRs"
    examples:
      - "flip_flop 157 2324 1 0"

  - aln_type: "Full 5` ITR and partial mid section"
    examples:
      - "flip_flop 11 1500 1 0"
      - "flip_flop 20 2323 -1 0"

  - aln_type: "Partial mid section and full 3` ITR"
    examples:
      -  "flip_flop 157 2445 1 0"
      - "flip_flop 2324 2453 -1 0"

  - aln_type: "Partial 5` ITR and partial mid section"
    examples:
      - "flip_flop 150 1500 1 0"
      - "flip_flop 155 2323 -1 0"

  - aln_type: "Partial mid section and partial 3` ITR"
    examples:
      - "flip_flop 1500 2330 1 0"
      - "flip_flop 300  2340 -1 0"

  - aln_type: "5` ITR"
    examples:
      -  "flip_flop 11 156 1 0"
      - "flip_flop 50 100 -1 0"

  - aln_type: "3` ITR"
    examples:
      - "flip_flop 2325 2454 1 0"
      - "flip_flop 2350 2450 -1 0"

  # Backbone is considered to be < 20 nt of the ITR1 start or > 20 nt of the ITR2 end
  # Having to use negative values ...
  - aln_type: "Vector backbone - 5` end"
    examples:
      - "flip_flop -10  100 1 0"
      - "flip_flop -10 200 -1 0"

  - aln_type: "Vector backbone - 3` end"
    examples:
      - "flip_flop 2454  2600 1 0"
      - "flip_flop 2000 2475 -1 0"

  - aln_type: "Backbone"
    examples:
      - "flip_flop -10  10 1 0"
      - "flip_flop 2455 2600 -1 0"

  # Extends on both sides into backbone
  - aln_type: "Extended ITR-ITR region"
    examples:
      - "flip_flop -20  24700 1 0"
      - "flip_flop -30 2600 -1 0"


# Assigned_genome_subtypes test data
# Each entry provides examples of reads and the read type mapping.
# An example contains information from one or more alignments. The alignments entries also include an AlnType assignment.
# The number of alignments present in an example depends on how many alignments are required to fully specify the
# read type.
# For most of these examples, only the identity of the aln types is used to determine the read type. But some of the
# examples are tested for symmetry and so the alignment start and end positions are required to be meaningful in
# these cases (these are present at the bottom).
# Note: Each possible read_type is present here, but not each potential combination of AlnTypes are currently tested

# The elements of each alignment in the examples are
# 1: String of alignment info
#  - read_id
#  - reference
#  - start
#  - end
#  - strand
#  - isSec # we can get rid of this
#  2 : the associated aln_type

# TODO:
# Most of these categories do not take into account the start and end positions but some do need this info
# For those categories that do not use position info, set Pos and EndPOs to -1 to make this clear
assigned_genome_subtypes:
  - read_type: "Full_ssAAV"
    examples:
    - [["full_ssaav_1 flip_flop 15 2449 1 0", 'Almost complete']]

  - read_type: "GDM"
    # GDM is 2 alignments on the same strand with a gap in between
    examples:
      - [["gdm_1 flip_flop 15 100 1 0", "Partial - no ITRs"], ["gdm_1 flip_flop 1100 2400 1 0", "Partial - no ITRs"]]
      - [["gdm_2 flip_flop 15 1000 1 0", "Full 5` ITR and partial mid section"], ["gdm_2 flip_flop 2300 2448 1 0", "Partial mid section and partial 3` ITR"]]

  - read_type: "3` ICG"
    examples:
      - [ [ "icg3_1 flip_flop 1 100 1 0", "Partial 5` ITR and full 3` ITR" ] ]
      - [ [ "icg3_2 flip_flop 1 100 1 0", "Partial mid section and full 3` ITR" ] ]

  - read_type: "5` ICG"
    examples:
      - [ [ "icg5_1 flip_flop 1 100 1 0", "Full 5` ITR and partial 3` ITR" ] ]
      - [ [ "icg5_2 flip_flop 1 100 1 0", "Full 5` ITR and partial mid section" ] ]

  - read_type: "Partial ICG - incomplete ITRs"
    examples:
        - [ [ "par_icg_1 flip_flop 1 100 1 0", "Partial 5` ITR and partial mid section" ] ]
        - [ [ "par_icg_2 flip_flop 1 100 1 0", "Partial mid section and partial 3` ITR" ] ]

  - read_type: "Partial ICG - no ITRs"
    examples:
      - [ [ "par_icg_3 flip_flop 1 100 1 0", "Partial - no ITRs" ] ]

  - read_type: "Full_scAAV"
    examples:
      - [["full_scaav_1 flip_flop 15 2449 1 0", 'Almost complete'], ["full_scaav_1 flip_flop 2340 24450  -1 0", 'Almost complete']] # Fix locs
      - [["full_scaav_2 flip_flop 15 2449 1 0", "Almost complete"], ["full_scaav_2 flip_flop 2340 24450  -1 0", "Partial 5` ITR and full 3` ITR"]]

  - read_type: "SBG 3` asymmetric"
    examples:
      - [["sbg_1 flip_flop 15 2449 1 0", "Almost complete" ], ["sbg_1 flip_flop 2340 24450 -1 0", "Partial mid section and full 3` ITR"]]

  - read_type: "SBG 3` incomplete ITR asymmetric"
    examples:
      - [["sbg3_incom_asym_1 flip_flop 15 2449 1 0", "Almost complete" ], ["sbg3_incom_asym_1 flip_flop 2340 24450 -1 0", "Partial mid section and partial 3` ITR"]]
      - [["sbg3_incom_asym_2 flip_flop 15 2449 1 0", "Partial mid section and full 3` ITR" ], ["sbg3_incom_asym_2 flip_flop 30 24450 -1 0", "Partial mid section and partial 3` ITR"]]
      - [[ "sbg3_incom_asym_3 flip_flop 150 1500 1 0", "Partial mid section and partial 3` ITR" ], [ "sbg3_incom_asym_3 flip_flop 135 1499 -1 0", "Partial mid section and partial 3` ITR" ]]


  - read_type: "SBG 3` incomplete ITR symmetric"
    examples:
      - [["sbg3_incom_sym_1 flip_flop 15 2449 1 0", "Partial mid section and full 3` ITR" ], ["sbg3_incom_sym_1 flip_flop 17 24450 -1 0", "Partial mid section and partial 3` ITR"]]
      - [["sbg3_incom_sym_2 flip_flop 150 1500 1 0", "Partial mid section and partial 3` ITR" ], [ "sbg3_incom_sym_2 flip_flop 149 1499 -1 0", "Partial mid section and partial 3` ITR" ] ]

  - read_type: "SBG 5` asymmetric"
    examples:
      - [ [ "sbg5_asym_1 flip_flop 0 0 1 0", 'Full 5` ITR and partial mid section' ], [ "sbg5_asym_1 flip_flop 0 0 -1 0", "Full 5` ITR and partial 3` ITR" ] ]
      - [ [ "sbg5_asym_2 flip_flop 11 1500 1 0", 'Full 5` ITR and partial mid section' ], [ "sbg5_asym_2 flip_flop 11 1502 -1 0", "Full 5` ITR and partial 3` ITR" ] ]

  - read_type: "SBG 5` incomplete ITR asymmetric"
    examples:
      - [ [ "sbg5_incom_itr_asym_1 flip_flop 15 2449 1 0", 'Partial 5` ITR and full 3` ITR' ], [ "sbg5_incom_itr_asym_1 flip_flop 2340 24450 -1 0", "Full 5` ITR and partial mid section" ] ]
      - [ [ "sbg5_incom_itr_asym_2 flip_flop 15 1500 1 0", "Full 5` ITR and partial mid section" ], [ "sbg5_incom_itr_asym_2 flip_flop 15 1600 -1 0", "Partial 5` ITR and partial mid section" ] ]
      - [ [ "sbg5_incom_itr_asym_3 flip_flop 15 1500 1 0","Partial 5` ITR and partial mid section" ], [ "sbg5_incom_itr_asym_3 flip_flop 15 1600 -1 0", "Partial 5` ITR and partial mid section" ] ]

  - read_type: "SBG 5` incomplete ITR symmetric"
    examples:
      - [ [ "sbg5_incom_sym_1 flip_flop 120 1600 1 0", "Partial 5` ITR and partial mid section"  ], ["sbg5_incom_sym_1 flip_flop 121 1601 -1 0", "Partial 5` ITR and partial mid section"]]
      - [ [ "sbg5_incom_sym_2 flip_flop 150 1500 1 0", "Partial 5` ITR and partial mid section" ], [ "sbg5_incom_sym_2 flip_flop 20 1499 -1 0", "Full 5` ITR and partial mid section" ] ]

  - read_type: "SBG 3` symmetric"
    examples:
      - [ [ "sbg3_sym_1 flip_flop 1000 2400 1 0", "Partial mid section and full 3` ITR" ], [ "sbg3_sym_1 flip_flop 1001 2405 -1 0", "Partial mid section and full 3` ITR" ] ]

  - read_type: "SBG 3` asymmetric"
    examples:
      - [ [ "sbg3_asym_1 flip_flop 1000 2400 1 0", "Partial mid section and full 3` ITR" ], [ "sbg3_asym_1 flip_flop 900 2412 -1 0", "Partial mid section and full 3` ITR" ] ]

  - read_type: "SBG (unresolved)"
    examples:
          - [ [ "sbg5_unres_1 flip_flop 15 2449 1 0", 'Partial 5` ITR and partial 3` ITR' ], [ "sbg5_unres_1 flip_flop 2340 24450 -1 0", "Partial - no ITRs" ] ]
          - [ [ "sbg5_unres_2 flip_flop 15 2449 1 0", 'Partial - no ITRs' ], [ "sbg5_unres_2 flip_flop 2340 24450 -1 0", "Partial - no ITRs" ] ]
          - [ ["sbg5_unres_3 flip_flop 0 0 1 0", 'Partial - no ITRs' ], ["sbg5_unres_3 flip_flop 0 0 -1 0", 'Partial - no ITRs' ] ]

  - read_type: "ITR1 concatemer"
    examples:
          - [ [ "itr1_cat_1 flip_flop 15 2449 1 0", '5` ITR' ], [ "itr1_cat_1 flip_flop 2340 24450 -1 0", '5` ITR' ] ]

  - read_type: "ITR2 concatemer"
    examples:
          - [ [ "itr2_cat_1 flip_flop 15 2449 1 0", '3` ITR' ], [ "itr2_cat_1 flip_flop 2340 24450 -1 0", '3` ITR' ] ]

  - read_type: "ITR1-ITR2 concatemer"
    examples:
          - [ [ "itr1_2_cat_1 flip_flop 15 2449 1 0", '5` ITR' ], [ "itr1_2_cat_1 flip_flop 2340 24450 -1 0", '3` ITR' ] ]

  - read_type: "Partial ICG - part of both ITRs"
    examples:
          - [ [ "par_icg_both_itrs flip_flop 15 2449 1 0", 'Partial 5` ITR and partial 3` ITR' ] ]

  - read_type: "Backbone contamination"
    # This category can have 1 or two alignments
    examples:
          # Single alignment per read
          - [ [ "bb_1 flip_flop -10 2449 1 0",  'Vector backbone - 5` end'] ]
          - [ [ "bb_2 flip_flop 15 2475 1 0",  'Vector backbone - 3` end'] ]
          # two alignments per read
          - [ [ "bb_3 flip_flop -10 2449 1 0",  'Vector backbone - 5` end'], [ "bb_3 flip_flop 15 24600 -1 0",  'Vector backbone - 3` end'] ]

  - read_type: "Complex"
    examples:
      # 3 or more alignments
      - [ [ "complex1 flip_flop 1000 2400 1 0", "Partial mid section and full 3` ITR" ], [ "complex1 flip_flop 900 2412 -1 0", "Partial mid section and full 3` ITR" ],  [ "complex1 flip_flop 900 2412 -1 0", "Partial mid section and full 3` ITR" ]  ]
      # Overlapping primary and supplementary alignments
      - [ [ "complex2 flip_flop 1000 2400 1 0", "NA" ], [ "complex2 flip_flop 2000 2412 1 0", "NA" ] ]

#  - read_type: "Unknown"
#  # Not covered by any other category
#    examples:
#      - [[ "unknown1 flip_flop 1000 2400 1 0", '5` ITR' ],  [ "unknown1 flip_flop 1000 2400 1 0", "Partial - no ITRs" ]]

  # The examples below here are tested for symmetrical alignments. Therefore, the start and end positions are meaningful
  # TODO move the rest of the symmetrical tests here
  - read_type: "SBG 5` symmetric"
    # This example uses the positions to dertermine
    examples: # This is coming out as asymmetric
      - [ [ "sbg5_sym_1 flip_flop 15 1500 1 0", 'Full 5` ITR and partial mid section' ], [ "sbg5_sym_1 flip_flop 15 1505 -1 0", 'Full 5` ITR and partial mid section' ] ]
